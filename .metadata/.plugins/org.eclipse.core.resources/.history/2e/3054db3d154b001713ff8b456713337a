import java.util.ArrayList;

public class CPU {
	private static int ID = 0;
	private int nProcess;
	private int cpuID;
	private float rateCPU;
	private float processRatio;
	private ArrayList<Task> runningTasks;
	private TaskGenerator taskGenerator;
	public CPU(int nProc, float cpuUse, float processRate) {
		cpuID = ID++;
		nProcess = nProc;
		rateCPU = cpuUse;
		processRatio = processRate;
		runningTasks = new ArrayList<Task>();
	}
	
	public void addTaskGenerator (int TMT, int Amount, int nProc, String type) {
		TaskFactory taskFactory = new TaskFactory();
		taskGenerator = TaskFactory.createTaskGenerator("intense", TMT, Amount, nProc);
	}
	
	public void generateTask() {
		
	}

	public void update(int realTime) {
		ArrayList<int> killProcess = new ArrayList<int>();
		for (int i = 0; i < runningTasks.size(); i++) {
			runningTasks.get(i).execute();
			if (runningTasks.get(i).getRemainingTime() == 0) {
				killProcess.add(i);
			}
		}
		for (int process : killProcess) {
			runningTasks.remove(process);
		}
		
	}

}
